#!/bin/bash

function usage {
  echo "Usage: `basename $0` -m modelname -s [season-yyyy-mm|community race name] -c"
  echo "-m is mandatory"
  echo "-s if it is not used, the race name is set to season-<current year>-<current-month>"
  echo "-c is optional for community race"
}

MODELNAME=""
CONFIGFILE="aws-deepracer.cf"

if [ -f $CONFIGFILE ]; then
    ACCOUNTID=$(grep -i ACCOUNTID $CONFIGFILE | awk -F= '{gsub(/"/, "", $2); print $2}')
else
    echo "The config file $CONFIGFILE is not found"
    exit 1
fi

SEASON="season-$(date +%Y-%m)"
DATASEASON='{"headers":{"X-Amz-User-Agent":"aws-sdk-js/2.324.0 promise","Content-Type":"application/x-amz-json-1.1","X-Amz-Target":"AwsSilverstoneCloudService.CreateLeaderboardSubmission"},"path":"/","method":"POST","region":"us-east-1","params":{},"contentString":"{\"LeaderboardArn\":\"'

m_flag=0
c_flag=0
while getopts "m:cs:" opt; do
  case "$opt" in
  m)
    MODELNAME="$OPTARG"
    m_flag=1
    ;;
  c)
    c_flag=1
    ;;
  s)
    SEASONX=(${OPTARG//-/ })
    if [ "${SEASONX[0]}" -eq "${SEASONX[0]}" ] 2>/dev/null
    then
      SEASON="season-$OPTARG"
    else
      SEASON="$OPTARG"
    fi
    ;;
  \?)
    usage
    exit
    ;;
  esac
done

if [ $m_flag -eq 0 ]; then
  usage
  exit
fi


if [ $c_flag -eq 1 ]; then
  LEADERBOARDS=$(./aws-listSubscribedPrivateLeaderboards)
  echo $LEADERBOARDS | jq '.error[0]' | grep authenticate > /dev/null
  if [ $? == 0 ]; then
    echo $LEADERBOARDS
    exit 1
  fi
  ARN=$(echo $LEADERBOARDS | jq '.PrivateLeaderboards[]|select(.Arn|test("'$SEASON'$"))|.Arn'|sed 's/"//g')
else
  LEADERBOARDS=$(./aws-listLeaderboards)
  echo $LEADERBOARDS | jq '.error[0]' | grep authenticate > /dev/null
  if [ $? == 0 ]; then
    echo $LEADERBOARDS
    exit 1
  fi
  ARN=$(echo $LEADERBOARDS | jq '.Leaderboards[]|select(.Arn|test("'$SEASON'$"))|.Arn'|sed 's/"//g')
fi

if [ -z "$ARN" ]; then
  echo '{ "error": [ "'$SEASON' does not exist" ] }'
  exit 1
fi

DATASEASON="$DATASEASON$ARN"
DATA=$DATASEASON'\",\"ModelArn\":\"arn:aws:deepracer:us-east-1:'
DATA+=$ACCOUNTID
DATA+=':model/reinforcement_learning/'
DATA+=$MODELNAME
DATA+='\"}","operation":"createLeaderboardSubmission"}'
export DATA

./aws-execCurl | jq '.'
